{
  "entities": [
    {
      "name": "User",
      "description": "Registered account used for authentication and authorization; can own projects and have multiple sessions.",
      "aliases": [],
      "sources": [
        "figma:Inicio de Sesion",
        "figma:Crear cuenta",
        "figma:Olvido Contraseña",
        "doc:schema_definitions.json",
        "figma:Inicio de Sesion",
        "figma:Crear cuenta",
        "figma:Olvido Contraseña",
        "doc:schema_definitions.json"
      ],
      "confidence": 0.95,
      "attributes": [
        {
          "name": "id",
          "type": "string",
          "pk": true,
          "nullable": false,
          "sources": [
            "figma:Inicio de Sesion",
            "figma:Crear cuenta",
            "figma:Olvido Contraseña"
          ],
          "confidence": 0.78
        },
        {
          "name": "email",
          "type": "email",
          "unique": true,
          "nullable": false,
          "sources": [
            "figma:Inicio de Sesion",
            "figma:Crear cuenta",
            "figma:Olvido Contraseña"
          ],
          "confidence": 0.92
        },
        {
          "name": "password",
          "type": "string",
          "nullable": false,
          "sources": [
            "figma:Inicio de Sesion",
            "figma:Crear cuenta"
          ],
          "confidence": 0.9
        },
        {
          "name": "resettoken",
          "type": "string",
          "nullable": true,
          "sources": [
            "figma:Olvido Contraseña",
            "figma:Inicio de Sesion",
            "figma:Crear cuenta"
          ],
          "confidence": 0.75
        }
      ]
    },
    {
      "name": "Project",
      "description": "Project managed in the system that belongs to exactly one user.",
      "aliases": [],
      "sources": [
        "figma:Proyectos",
        "doc:schema_definitions.json",
        "figma:Proyectos",
        "doc:schema_definitions.json"
      ],
      "confidence": 0.9,
      "attributes": [
        {
          "name": "id",
          "type": "string",
          "pk": true,
          "nullable": false,
          "sources": [
            "figma:Proyectos"
          ],
          "confidence": 0.75
        },
        {
          "name": "userid",
          "type": "string",
          "nullable": false,
          "sources": [
            "figma:Proyectos",
            "doc:schema_definitions.json"
          ],
          "confidence": 0.8
        },
        {
          "name": "name",
          "type": "string",
          "nullable": false,
          "sources": [
            "figma:Proyectos"
          ],
          "confidence": 0.85
        },
        {
          "name": "description",
          "type": "text",
          "nullable": true,
          "sources": [
            "figma:Proyectos"
          ],
          "confidence": 0.6
        }
      ]
    },
    {
      "name": "Session",
      "description": "Authentication session for a user; a user can have multiple active sessions (e.g., across devices).",
      "aliases": [],
      "sources": [
        "doc:schema_definitions.json",
        "doc:schema_definitions.json"
      ],
      "confidence": 0.8,
      "attributes": [
        {
          "name": "id",
          "type": "string",
          "pk": true,
          "nullable": false,
          "sources": [
            "doc:schema_definitions.json"
          ],
          "confidence": 0.5
        },
        {
          "name": "userid",
          "type": "string",
          "nullable": false,
          "sources": [
            "doc:schema_definitions.json"
          ],
          "confidence": 0.55
        }
      ]
    }
  ],
  "relationships": [
    {
      "from": "Project",
      "to": "User",
      "type": "many-to-one",
      "fk": {
        "attribute": "userid",
        "ref": "User.id"
      },
      "mandatory": {
        "from": true,
        "to": false
      },
      "sources": [
        "doc:schema_definitions.json",
        "figma:Proyectos",
        "ai_analysis:User-Project"
      ],
      "confidence": 0.95
    },
    {
      "from": "Session",
      "to": "User",
      "type": "many-to-one",
      "fk": {
        "attribute": "userid",
        "ref": "User.id"
      },
      "mandatory": {
        "from": true,
        "to": false
      },
      "sources": [
        "doc:schema_definitions.json"
      ],
      "confidence": 0.9
    }
  ],
  "enums": [
    {
      "name": "UserRole",
      "values": [
        "admin",
        "user",
        "guest"
      ],
      "sources": [
        "doc:schema_definitions.json"
      ]
    },
    {
      "name": "ProjectPriority",
      "values": [
        "low",
        "medium",
        "high",
        "urgent"
      ],
      "sources": [
        "doc:schema_definitions.json"
      ]
    }
  ],
  "meta": {
    "generation_time": null,
    "open_questions": [
      {
        "question": "Should Event be modeled as a distinct entity from Project, or are Events and Projects the same concept in this domain?",
        "sources": [
          "doc:requirements.pdf",
          "doc:discovery.docx",
          "figma:Proyectos"
        ]
      },
      {
        "question": "Should Provider (Supplier) be a first-class entity (e.g., with a provider profile and classifications)?",
        "sources": [
          "doc:discovery.docx"
        ]
      },
      {
        "question": "Should Notifications be modeled as a domain entity?",
        "sources": [
          "doc:requirements.pdf"
        ]
      },
      {
        "question": "Confirm the identifier types for all entities (uuid, cuid, or string) and naming conventions for IDs.",
        "sources": [
          "figma:Inicio de Sesion",
          "figma:Crear cuenta",
          "figma:Olvido Contraseña",
          "figma:Proyectos",
          "doc:schema_definitions.json"
        ],
        "confidence": 0.48
      },
      {
        "question": "What attributes should Session include beyond id and userId (e.g., token, createdAt, expiresAt, userAgent, ipAddress)?",
        "sources": [
          "doc:schema_definitions.json"
        ],
        "confidence": 0.45
      },
      {
        "question": "Should User include a role attribute referencing the UserRole enum (admin, user, guest)?",
        "sources": [
          "doc:schema_definitions.json"
        ],
        "confidence": 0.52
      },
      {
        "question": "Should Project include a priority attribute referencing the ProjectPriority enum (low, medium, high, urgent)?",
        "sources": [
          "doc:schema_definitions.json"
        ],
        "confidence": 0.52
      },
      {
        "question": "Confirm the preferred naming convention for foreign keys: use camelCase (userId) instead of snake_case (user_id) as seen in Figma cards.",
        "sources": [
          "figma:Proyectos",
          "figma:Inicio de Sesion",
          "figma:Crear cuenta",
          "figma:Olvido Contraseña"
        ],
        "confidence": 0.64
      },
      {
        "question": "Should Project.description be modeled as text (unbounded) or string (length-limited)?",
        "sources": [
          "figma:Proyectos"
        ],
        "confidence": 0.58
      },
      {
        "question": "Should Event be modeled as a distinct entity from Project, or are Events and Projects the same concept in this domain?",
        "sources": [
          "doc:requirements.pdf",
          "doc:discovery.docx",
          "figma:Proyectos"
        ],
        "confidence": 0.5
      },
      {
        "question": "Should Provider (Supplier) be a first-class entity (e.g., with a provider profile and classifications)?",
        "sources": [
          "doc:discovery.docx"
        ],
        "confidence": 0.6
      },
      {
        "question": "Should Notifications be modeled as a domain entity?",
        "sources": [
          "doc:requirements.pdf"
        ],
        "confidence": 0.55
      }
    ]
  }
}